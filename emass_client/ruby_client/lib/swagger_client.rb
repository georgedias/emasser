=begin
#Enterprise Mission Assurance Support Service (eMASS)

#The Enterprise Mission Assurance Support Service (eMASS) REST Application Programming Interface (API) enables users to perform assessments and complete actions associated with system records. This document will provide an outline of all eMASS objects and their associated endpoints to include Department of Defense (DoD) business rules that pertain to each.  New users will need to register an API key with the eMASS development team prior to accessing the site for the first time. The eMASS REST API requires a client certificate (SSL/TLS, DoD PKI only) where {url}/api/register (POST) is used to register the client certificate.  Every call to the eMASS REST API will require the use of the agreed upon public key certificate and API key. The API key must be provided in the request header for all endpoint calls (api-key). If the service receives an untrusted certificate or API key, a 401 error response code will be returned along with an error message.  <strong>Available Request Headers:</strong>  | Key      | Example Value            | Description |----------|--------------------------|------------------------------------ |`api-key` |api-key-provided-by-emass |This API key must be provided in the request header for all endpoint calls |`user-uid`|USER.UID.KEY              |This User unique identifier key must be provided in the request header for all PUT, POST, and DELETE endpoint calls. |          |                          |Note: For DoD users this is the DoD ID Number (EIDIPI) on their DoD CAC.  Users are required to log-in to eMASS and grant permissions for a client to update data within eMASS on their behalf. This is only required for actionable requests (PUT, POST, DELETE). The Registration Endpoint and all GET requests can be accessed without completing this process with the correct permissions.  <strong>Approve API Client for Actionable Requests</strong><br> Users are required to log-in to eMASS and grant permissions for a client to update data within eMASS on their behalf. This is only required for actionable requests (PUT, POST, DELETE). The Registration Endpoint and all GET requests can be accessed without completing this process with the correct permissions. Please note that leaving a field parameter blank (for PUT/POST requests) has the potential to clear information in the active eMASS records.  To establish an account with eMASS and/or acquire an api-key/user-uid, contact one of the listed POC: 

OpenAPI spec version: 2.3.0
Contact: disa.meade.id.mbx.emass-tier-iii-support@mail.mil
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.26
=end

# Common files
require 'swagger_client/api_client'
require 'swagger_client/api_error'
require 'swagger_client/version'
require 'swagger_client/configuration'

# Models
require 'swagger_client/models/approval_cac_get'
require 'swagger_client/models/approval_cac_request_post_body'
require 'swagger_client/models/approval_cac_response_get'
require 'swagger_client/models/approval_cac_response_post'
require 'swagger_client/models/approval_cac_response_post_data'
require 'swagger_client/models/approval_pac_get'
require 'swagger_client/models/approval_pac_post'
require 'swagger_client/models/approval_pac_request_body_post'
require 'swagger_client/models/approval_pac_response_get'
require 'swagger_client/models/approval_pac_response_post'
require 'swagger_client/models/artifacts_delete'
require 'swagger_client/models/artifacts_delete_inner'
require 'swagger_client/models/artifacts_get'
require 'swagger_client/models/artifacts_request_put_body'
require 'swagger_client/models/artifacts_response_del'
require 'swagger_client/models/artifacts_response_del_data'
require 'swagger_client/models/artifacts_response_get'
require 'swagger_client/models/artifacts_response_put_post'
require 'swagger_client/models/controls_get'
require 'swagger_client/models/controls_put'
require 'swagger_client/models/controls_request_put_body'
require 'swagger_client/models/controls_response_get'
require 'swagger_client/models/controls_response_put'
require 'swagger_client/models/delete_milestone'
require 'swagger_client/models/delete_poam'
require 'swagger_client/models/empty200_response'
require 'swagger_client/models/error'
require 'swagger_client/models/inline_response_200'
require 'swagger_client/models/milestone_response_get'
require 'swagger_client/models/milestone_response_post'
require 'swagger_client/models/milestone_response_put'
require 'swagger_client/models/milestones_delete'
require 'swagger_client/models/milestones_get'
require 'swagger_client/models/milestones_post'
require 'swagger_client/models/milestones_put'
require 'swagger_client/models/milestones_put_post_delete'
require 'swagger_client/models/milestones_request_post_body'
require 'swagger_client/models/milestones_request_put_body'
require 'swagger_client/models/milestones_required_post'
require 'swagger_client/models/milestones_required_put'
require 'swagger_client/models/model_200'
require 'swagger_client/models/model_400'
require 'swagger_client/models/model_400_response'
require 'swagger_client/models/model_401'
require 'swagger_client/models/model_404'
require 'swagger_client/models/model_404_response'
require 'swagger_client/models/model_480'
require 'swagger_client/models/model_490'
require 'swagger_client/models/one_ofinline_response_200'
require 'swagger_client/models/poam_delete'
require 'swagger_client/models/poam_get'
require 'swagger_client/models/poam_post'
require 'swagger_client/models/poam_post_put_del'
require 'swagger_client/models/poam_put'
require 'swagger_client/models/poam_request_post_body'
require 'swagger_client/models/poam_request_put_body'
require 'swagger_client/models/poam_required_post'
require 'swagger_client/models/poam_required_put'
require 'swagger_client/models/poam_response_delete'
require 'swagger_client/models/poam_response_get'
require 'swagger_client/models/poam_response_post'
require 'swagger_client/models/poam_response_put'
require 'swagger_client/models/register'
require 'swagger_client/models/register_data'
require 'swagger_client/models/register_user_request_post_body'
require 'swagger_client/models/role_category'
require 'swagger_client/models/roles'
require 'swagger_client/models/system_id_artifacts_body'
require 'swagger_client/models/system_response1'
require 'swagger_client/models/system_response2'
require 'swagger_client/models/system_role_category_response'
require 'swagger_client/models/system_roles_response'
require 'swagger_client/models/system_roles_response_data'
require 'swagger_client/models/systems1'
require 'swagger_client/models/systems2'
require 'swagger_client/models/test'
require 'swagger_client/models/test_data'
require 'swagger_client/models/test_results_get'
require 'swagger_client/models/test_results_post'
require 'swagger_client/models/test_results_request_post_body'
require 'swagger_client/models/test_results_response_get'
require 'swagger_client/models/test_results_response_post'
require 'swagger_client/models/users'

# APIs
require 'swagger_client/api/approval_chain_api'
require 'swagger_client/api/artifacts_api'
require 'swagger_client/api/controls_api'
require 'swagger_client/api/poam_api'
require 'swagger_client/api/registration_api'
require 'swagger_client/api/system_roles_api'
require 'swagger_client/api/systems_api'
require 'swagger_client/api/test_api'
require 'swagger_client/api/test_results_api'

module SwaggerClient
  class << self
    # Customize default settings for the SDK using block.
    #   SwaggerClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
